<?xml version="1.0" encoding="UTF-8"?>
<configuration>

    <!-- 属性 -->
    <springProperty scop="context" name="spring.application.name" source="spring.application.name" defaultValue=""/>
    <!-- 服务名称 -->
    <property name="serviceName" value="${spring.application.name}"/>
    <!-- 日志保留天数 -->
    <property name="maxHistory" value="15"/>

    <!-- 彩色日志 -->
    <!-- 彩色日志依赖的渲染类 -->
    <conversionRule conversionWord="clr" converterClass="org.springframework.boot.logging.logback.ColorConverter"/>
    <conversionRule conversionWord="wex"
                    converterClass="org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter"/>
    <conversionRule conversionWord="wEx"
                    converterClass="org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter"/>
    <!-- 彩色日志格式 -->
    <property name="CONSOLE_LOG_PATTERN"
              value="${CONSOLE_LOG_PATTERN:-%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}"/>

    <!-- 默认的控制台日志输出，一般生产环境都是后台启动，这个没太大作用 -->
    <appender name="CONSOLE-LOG" class="ch.qos.logback.core.ConsoleAppender">
        <param name="Encoding" value="UTF-8"/>
        <layout class="ch.qos.logback.classic.PatternLayout">
            <!--<pattern>%date [%thread] %-5level %logger{50}:%L - %msg%n</pattern>-->
            <pattern>${CONSOLE_LOG_PATTERN}</pattern>
        </layout>
    </appender>

    <!-- 收集除 error 级别以外的日志 -->
    <appender name="INFO-LOG" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <param name="Encoding" value="UTF-8"/>
        <!--<filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>DENY</onMatch>
            <onMismatch>ACCEPT</onMismatch>
        </filter>
        <File>logs/info/${serviceName}-info.log</File>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <FileNamePattern>logs/history/info/service.%d{yyyy-MM-dd}.info-log.gz</FileNamePattern>
            <maxHistory>${maxHistory}</maxHistory>
        </rollingPolicy>-->
        <File>logs/${serviceName}.log</File>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <FileNamePattern>logs/history/info/service.%d{yyyy-MM-dd}.log.gz</FileNamePattern>
            <maxHistory>${maxHistory}</maxHistory>
        </rollingPolicy>
        <layout class="ch.qos.logback.classic.PatternLayout">
            <pattern>%date [%thread] %-5level %logger{50}:%L - %msg%n</pattern>
        </layout>
    </appender>

    <!-- 收集 error 级别的日志 -->
    <appender name="ERROR-LOG" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <param name="Encoding" value="UTF-8"/>
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>ERROR</level>
        </filter>
        <File>logs/error/${serviceName}-error.log</File>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <FileNamePattern>logs/history/error/service.%d{yyyy-MM-dd}.error-log.gz</FileNamePattern>
            <maxHistory>${maxHistory}</maxHistory>
        </rollingPolicy>
        <layout class="ch.qos.logback.classic.PatternLayout">
            <pattern>%date [%thread] %-5level %logger{50}:%L - %msg%n</pattern>
        </layout>
    </appender>

    <!-- 异步输出 -->
    <appender name="ASYNC-INFO" class="ch.qos.logback.classic.AsyncAppender">
        <!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
        <discardingThreshold>0</discardingThreshold>
        <!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
        <queueSize>256</queueSize>
        <!-- 添加附加的appender,最多只能添加一个 -->
        <appender-ref ref="INFO-LOG"/>
    </appender>

    <appender name="ASYNC-ERROR" class="ch.qos.logback.classic.AsyncAppender">
        <!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
        <discardingThreshold>0</discardingThreshold>
        <!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
        <queueSize>256</queueSize>
        <!-- 添加附加的appender,最多只能添加一个 -->
        <appender-ref ref="ERROR-LOG"/>
    </appender>

    <!-- 修改其他包的日志输出级别 -->
    <logger name="com.ai.srd" level="INFO"/>
    <logger name="com.ai.srd.modules.flowable.mapper" level="DEBUG"/>
    <logger name="com.alibaba.nacos.client.naming" level="ERROR"/>

    <!-- root 默认日志配置 ， 注意这里的级别哈！小心生产环境用 DEBUG，压爆你的磁盘！-->
    <root level="INFO">
        <!-- 控制台日志 -->
        <appender-ref ref="CONSOLE-LOG"/>

        <!-- 同步输出文件日志 -->
        <!--        <appender-ref ref="INFO-LOG"/>-->
        <!--        <appender-ref ref="ERROR-LOG"/>-->

        <!-- 异步输出文件日志 -->
        <appender-ref ref="ASYNC-INFO"/>
        <!--        <appender-ref ref="ASYNC-ERROR"/>-->
    </root>
</configuration>
